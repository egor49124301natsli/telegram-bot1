import time
from aiogram import types
from aiogram.dispatcher.middlewares import BaseMiddleware

from handlers.admin import ADMIN_IDS  # –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤

class AntiSpamMiddleware(BaseMiddleware):
    def __init__(self, limit_seconds: int = 5):
        super().__init__()
        self.limit = limit_seconds
        self.last_message_time = {}

    async def on_pre_process_message(self, message: types.Message, data: dict):
        user_id = message.from_user.id
        now = time.time()

        # ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã ‚Äî –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        if user_id in ADMIN_IDS:
            return

        banned_words = ["–∫–∞–∑–∏–Ω–æ", "–≤–∏–∑–∞", "–≤–∫", "–±–∏—Ç–∫–æ–∏–Ω", "–ø—Ä–æ–¥–∞–∂–∞", "–æ–±–º–µ–Ω"]

        # ‚ö†Ô∏è –ê–Ω—Ç–∏—Ñ–ª—É–¥
        if user_id in self.last_message_time:
            if now - self.last_message_time[user_id] < self.limit:
                print(f"[ ‚ö°Ô∏è FLOOD ] ID: {user_id}")
                await message.answer("üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Ñ–ª—É–¥–∏.")
                raise Exception("Flood detected")

        # üîí –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
        for word in banned_words:
            if word.lower() in message.text.lower():
                print(f"[ ‚ùå SPAM ] ID: {user_id} ‚Äî —Å–ª–æ–≤–æ: {word}")
                await message.answer("üö´ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞.")
                raise Exception("Banned word detected")

        self.last_message_time[user_id] = now
